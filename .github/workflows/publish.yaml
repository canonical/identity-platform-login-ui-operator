# reusable workflow for publishing all charms in this repo
name: Publish

on:
  push:
    tags:
      - "v**"
      - "track**"  

  workflow_dispatch:
    inputs:
      destination_channel:
        description: CharmHub channel to publish to
        required: false
        default: 'latest/edge'
        type: string
      source_branch:
        description: Github branch from this repo to publish.  If blank, will use the default branch
        required: false
        default: ''
        type: string
      override-ci:
        description: Override standard release flow
        required: true  
        type: boolean

jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      track: ${{ steps.check_step.outputs.track }}
      channel: ${{ steps.export.outputs.channel }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0
      - name: Get current branch
        id: check_step
        run: |
          raw=$(git branch -r --contains ${{ github.ref }})
          echo $raw
          track=${raw##*/}
          echo "track=$track" >> $GITHUB_OUTPUT
          echo "Track is $track."  
      - name: Get channel 
        if: ${{ steps.check_step.outputs.track == 'main'}}
        run: echo "channel=latest/edge" >> $GITHUB_ENV
      - name: Get channel 
        if: ${{ steps.check_step.outputs.track != 'main'}}
        run: echo "channel=${{ steps.check_step.outputs.track }}/edge" >> $GITHUB_ENV
      - name: Export channel
        id: export
        run: echo channel=${{ env.channel }} >> $GITHUB_OUTPUT

  
  publish-charm:
    name: Publish Charm
    runs-on: ubuntu-24.04
    needs: check
    outputs:
      channel: ${{ steps.parse-inputs.outputs.destination_channel }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0

      # Combine inputs from different sources to a single canonical value so later steps don't
      # need logic for picking the right one
      - name: Parse and combine inputs
        id: parse-inputs
        run: |
          # destination_channel
          destination_channel="${{ inputs.destination_channel || needs.check.outputs.channel }}"
          echo "setting output of destination_channel=$destination_channel"
          echo "destination_channel=$destination_channel" >> $GITHUB_OUTPUT

      - name: Upload charm to charmhub
        uses: canonical/charming-actions/upload-charm@934193396735701141a1decc3613818e412da606 # 2.6.3
        with:
          credentials: ${{ secrets.CHARMCRAFT_CREDENTIALS }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          channel: ${{ steps.parse-inputs.outputs.destination_channel }}
          destructive-mode: false

  revision:
    concurrency:
      group: ${{ inputs.track }}-${{ needs.publish-charm.outputs.channel }}
      cancel-in-progress: true
    needs: 
      - check
      - publish-charm
    outputs:
      revision: ${{ steps.set-revision.outputs.revision }}
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0
      - name: Set charm name
        id: set-charm-name  
        run: | 
          echo charm_name=$(cat charmcraft.yaml | yq '.name') >> $GITHUB_OUTPUT
      - name: Set revision
        id: set-revision
        run: |
          sudo snap install charmcraft --classic --channel latest/stable
          revision=$(charmcraft status ${{ env.CHARM_NAME }} --format json | jq '.[] | select(.track == "${{ env.TRACK }}") | .mappings[0].releases[] | select(.channel == "${{ needs.publish-charm.outputs.channel }}") | .revision')
          echo "setting output of revision=$revision"
          echo "revision=$revision" >> $GITHUB_OUTPUT
        env:
          CHARMCRAFT_AUTH: ${{ secrets.CHARMCRAFT_CREDENTIALS }}
          CHARM_NAME: ${{ steps.set-charm-name.outputs.charm_name }}
          # only cater for latest track for now
          TRACK: latest

  dev-deploy:
    concurrency:
      group: ${{ inputs.track }}-${{ needs.publish-charm.outputs.channel }}
      cancel-in-progress: true
    needs:
      - check
      - publish-charm
      - revision
    if: ${{ (needs.publish-charm.outputs.channel == 'latest/edge') }}
    uses: "./.github/workflows/_deploy.yaml"
    secrets:
        CLIENT_ID: ${{ secrets.JIMM_DEV_CLIENT_ID }}
        CLIENT_SECRET: ${{ secrets.JIMM_DEV_CLIENT_SECRET }}
        JIMM_URL: ${{ secrets.JIMM_URL }}
    with:
        model: dev-iam
        revision: ${{ needs.revision.outputs.revision }}
        channel: ${{ needs.publish-charm.outputs.channel}}

  stg-deploy:
    concurrency:
      group: ${{ needs.check.outputs.track }}-${{ needs.publish-charm.outputs.channel }}
      cancel-in-progress: true
    needs:
      - check
      - publish-charm
      - revision
    if: ${{ (needs.publish-charm.outputs.channel == 'latest/stable') }}
    uses: "./.github/workflows/_deploy.yaml"
    secrets:
        CLIENT_ID: ${{ secrets.JIMM_STG_CLIENT_ID }}
        CLIENT_SECRET: ${{ secrets.JIMM_STG_CLIENT_SECRET }}
        JIMM_URL: ${{ secrets.JIMM_URL }}
    with:
        model: stg-iam
        revision: ${{ needs.revision.outputs.revision }}
        channel: ${{ needs.publish-charm.outputs.channel}}
